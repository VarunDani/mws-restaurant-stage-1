let restaurant,reviews;var map;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))}),fetchReviewsFromURL()}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,n)=>{self.restaurant=n,n?(fillRestaurantHTML(),e(null,n)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img";const n=DBHelper.imageUrlForRestaurant(e),r=n.split("."),a=r[1]?r[1]:"jpg",l=n+"_small_1x."+a,s=n+"_large_2x."+a;t.src=s,t.srcset=`${l} 300w, ${s} 800w`,t.alt="Image for "+e.name+" Restaurant",document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr"),a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const l=document.createElement("td");l.innerHTML=e[n],r.appendChild(l),t.appendChild(r)}}),fillReviewsHTML=((e=self.reviews)=>{const t=document.getElementById("reviews-container"),n=document.createElement("h2");if(n.innerHTML="Reviews",t.appendChild(n),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),createReviewHTML=(e=>{const t=document.createElement("li"),n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p");var a=new Date(e.updatedAt).toDateString();r.innerHTML=a,t.appendChild(r);const l=document.createElement("p");l.innerHTML=`Rating: ${e.rating}`,t.appendChild(l);const s=document.createElement("p");return s.innerHTML=e.comments,t.appendChild(s),t}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li"),r=document.createElement("a");r.href=window.location,r.innerHTML=e.name,r.setAttribute("aria-current","page"),n.appendChild(r),t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}),fetchReviewsFromURL=(e=>{if(self.reviews)return void e(null,self.reviews);const t=getParameterByName("id");t?DBHelper.fetchReviewsById(t,(t,n)=>{self.reviews=n,n?(fillReviewsHTML(),e(null,self.reviews)):console.error("Reviews Not Available for Given Restaurant: "+t)}):(error="No restaurant id in URL",e(error,null))}),saveNewReview=(()=>{const e=document.getElementById("review-user-name").value,t=document.getElementById("review-user-rating"),n=t.options[t.selectedIndex].value,r=document.getElementById("review-user-text").value,a=self.restaurant.id,l=Date.parse(new Date);DBHelper.saveReview(a,e,n,r,l,(e,t)=>{e?(console.log("Problem in Network Connection, Adding review to Local store"),showSnackBar("Internet Connection not found. \nReview Added to local storage and will be sync once connected."),DBHelper.enableBackgroundSync()):showSnackBar("Review Added Successfully.")}),document.getElementById("reviews-list").appendChild(createReviewHTML({restaurant_id:a,name:e,rating:n,comments:r,createdAt:l,updatedAt:l})),document.getElementById("review-user-name").value="",document.getElementById("review-user-rating").selected="5",document.getElementById("review-user-text").value=""}),showSnackBar=(e=>{var t=document.getElementById("snackbar");t.innerHTML=e,t.className="show",setTimeout(function(){t.className=t.className.replace("show","")},3e3)}),markAsFavoriteRestaurant=(()=>{self.restaurant.is_favorite=!0,DBHelper.markRestaurantFavorite(self.restaurant,(e,t)=>{e?(showSnackBar("Internet Connection not found. \nReview Added to local storage and will be sync once connected ."),DBHelper.enableBackgroundSync()):showSnackBar("Restaurant marked as Favorite.")})});
